openapi: '3.0.2'
info:
  title: API Pessoa fisica/juridica e bens
  version: '1.0'
  description: 'API REST utilizada para manter o cadastro de pessoas físicas,
  pessoas jurídicas e seus proprietários bem como o registro de bens e posses
  associados à essas pessoas.'

servers:
  - url: http://localhost:8000/v1

paths:
  /physical-people/:
    get:
      description: Consulta as pessoas físicas cadastradas
      responses:
        '200':
          description: Lista de pessoas físicas cadastradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalPerson'
    post:
      description: Cria um novo registro de pessoa física
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalPerson'
            examples:
              example1:
                $ref: '#/components/examples/PhysicalPersonNoId'
      responses:
        '201':
          description: Novo registro criado com sucesso
          content:
            application/json:
              examples:
                example1:
                  $ref: '#/components/examples/PhysicalPersonAllFields'

        '400':
          description: Parâmetros obrigatórios ausentes ou com valores inválidos

  /physical-people/{id}/:
    parameters:
    - name: id
      in: path
      required: true
      description: Id da pessoa física cadastrada
      schema:
        type: integer
    get:
      description: Consulta as informações da pessoa física com o Id informado
      responses:
        '200':
          description: Dados da pessoa física pesquisada
          content:
            application/json:
              examples:
                example1:
                  $ref: '#/components/examples/PhysicalPersonAllFields'
        '404':
          description: Registro não encontrado
    put:
      description: Atualiza o registro da pessoa física com o Id informado
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalPerson'
            examples:
              example1:
                $ref: '#/components/examples/PhysicalPersonNoId'
      responses:
        '200':
          description: Registro atualizado com sucesso
        '400':
          description: Parâmetros obrigatórios ausentes ou com valores errados

    delete:
      description: Remove o registro da pessoa física com o Id informado
      responses:
        '200':
          description: Registro removido com sucesso
        '404':
          description: Registro não encontrado

  /legal-person/:
    get:
      description: Consulta as pessoas jurídicas cadastradas
      responses:
        '200':
          description: Lista de pessoas jurídicas cadastradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalPerson'
    post:
      description: Cria um novo registro de pessoa jurídica
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalPerson'
            examples:
              example1:
                $ref: '#/components/examples/LegalPersonNoId'
      responses:
        '201':
          description: Novo registro criado com sucesso
          content:
            application/json:
              examples:
                example1:
                  $ref: '#/components/examples/LegalPersonAllFields'

        '400':
          description: Parâmetros obrigatórios ausentes ou com valores inválidos

  /legal-people/{id}/:
    parameters:
    - name: id
      in: path
      required: true
      description: Número do Id da pessoa jurídica cadastrada
      schema:
        type: integer
    get:
      description: Consulta as informações da pessoa jurídica com o Id informado
      responses:
        '200':
          description: Dados da pessoa jurídica pesquisada
          content:
            application/json:
              examples:
                example1:
                  $ref: '#/components/examples/LegalPersonAllFields'
        '404':
          description: Registro não encontrado
    put:
      description: Atualiza o registro da pessoa jurídica com o Id informado
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalPerson'
            examples:
              example1:
                $ref: '#/components/examples/LegalPersonNoId'
      responses:
        '200':
          description: Registro atualizado com sucesso
        '400':
          description: Parâmetros obrigatórios ausentes ou com valores errados

    delete:
      description: Remove o registro da pessoa jurídica com o Id informado
      responses:
        '200':
          description: Registro removido com sucesso
        '404':
          description: Registro não encontrado

  /goods/:
    get:
      description: Consulta os bens cadastrados
      responses:
        '200':
          description: Lista de bens cadastrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goods'
    post:
      description: Cria um novo registro de um bem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goods'
            examples:
              example1:
                $ref: '#/components/examples/GoodsNoId'
      responses:
        '201':
          description: Novo registro criado com sucesso
          content:
            application/json:
              examples:
                example1:
                  $ref: '#/components/examples/GoodsAllFields'

        '400':
          description: Parâmetros obrigatórios ausentes ou com valores inválidos

  /goods/{id}/:
    parameters:
    - name: id
      in: path
      required: true
      description: Id do bem cadastrado
      schema:
        type: integer
    get:
      description: Consulta as informações do bem com o id informado
      responses:
        '200':
          description: Dados do bem pesquisado
          content:
            application/json:
              examples:
                example1:
                  $ref: '#/components/examples/GoodsAllFields'
        '404':
          description: Registro não encontrado
    put:
      description: Atualiza o registro do bem com o Id informado
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goods'
            examples:
              example1:
                $ref: '#/components/examples/GoodsNoId'
      responses:
        '200':
          description: Registro atualizado com sucesso
        '400':
          description: Parâmetros obrigatórios ausentes ou com valores errados
    delete:
      description: Remove o registro do bem com o Id informado
      responses:
        '200':
          description: Registro removido com sucesso
        '404':
          description: Registro não encontrado

components:
  schemas:
    PhysicalPerson:
      type: object
      required:
        - id
        - cpf
        - name
        - zipcode
        - email
        - phone_number
      properties:
        id:
          type: integer
        cpf:
          type: string
          pattern: '^\d{11}$'
        name:
          type: string
          maxLength: 200
        zipcode:
          type: string
          pattern: '^\d{8}$'
        email:
          type: string
          maxLength: 255
        phone_number:
          type: string
          pattern: '^\d{10, 12}$'

    LegalPerson:
      type: object
      required:
        - id
        - cnpj
        - social_reason
        - fantasy_name
        - state_registration
        - owner
        - zipcode
        - email
        - phone_number
      properties:
        id:
          type: integer
        cnpj:
          type: string
          pattern: '^\d{14}$'
        social_reason:
          type: string
          minLength: 12
          maxLength: 200
        fantasy_name:
          type: string
          minLength: 12
          maxLength: 200
        state_registration:
          type: string
          pattern: '^\d{9}$'
        owner:
          type: string
          pattern: '^[\d{11}|\d{14}]$'
          description: Propietário da empresa, um CPF ou CNPJ
        zipcode:
          type: string
          pattern: '^\d{8}$'
        email:
          type: string
          maxLength: 255
        phone_number:
          type: string
          pattern: '^\d{10, 12}$'

    Goods:
      type: object
      required:
        - id
        - type
        - description
        - owner
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - imovel
            - veiculo
            - empresa
        description:
          type: string
          maxLength: 300
        owner:
          type: string
          pattern: '^[\d{11}|\d{14}]$'
          description: Propietário do bem, um CPF ou CNPJ

  examples:
    PhysicalPersonAllFields:
      value:
        id: 1
        cpf: "25845675391"
        name: "Fulano Sem Sobrenome"
        zipcode: "11234567"
        email: "fulano@email.com"
        phone_number: "12345678912"

    PhysicalPersonNoId:
      value:
        cpf: "25845675391"
        name: "Fulano Sem Sobrenome"
        zipcode: "11234567"
        email: "fulano@email.com"
        phone_number: "12345678912"

    LegalPersonAllFields:
      value:
        id: 1
        cnpj: "01234567890001"
        social_reason: "Empresa SA"
        fantasy_name: "Empresa SA"
        state_registration: "0123456789"
        owner: "25845675391"
        zipcode: "11234567"
        email: "fulano@email.com"
        phone_number: "12345678912"

    LegalPersonNoId:
      value:
        cnpj: "01234567890001"
        social_reason: "Empresa SA"
        fantasy_name: "Empresa Fantasia"
        state_registration: "0123456789"
        owner: "25845675391"
        zipcode: "11234567"
        email: "fulano@email.com"
        phone_number: "12345678912"

    GoodsAllFields:
      value:
        id: 10
        type: "imovel"
        description: "Imóvel X na rua Z número XZ..."
        owner: "25845675391"

    GoodsNoId:
      value:
        type: "imovel"
        description: "Imóvel X na rua Z número XZ..."
        owner: "25845675391"
